#BlueJ class context
comment0.target=CuentaCorriente
comment0.text=\r\n\ La\ clase\ CuentaCorriente\ contiene\ los\ datos\ de\ un\ una\ cuenta\ corriente\:\ nro\ de\ cuenta,\ saldo,\ limite\ y\ titular\r\n\ @author(Joan\ Mauri)\r\n\ @author(Eduardo\ L\u00F3pez)\r\n\ @version(7/9/2025)\r\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CuentaCorriente(int,\ Persona)
comment1.text=\r\n\ Este\ constructor\ permite\ instanciar\ un\ objeto\ de\ la\ clase\ CuentaCorriente\ con\ el\ saldo\ en\ $0\ y\ el\ limite\ descubierto\ en\ $500\r\n\ @param\ p_nroCuenta\ numero\ de\ cuenta\r\n\ @param\ p_titular\ titular\ de\ la\ cuenta\r\n\ \r\n
comment10.params=
comment10.target=double\ getLimiteDescubierto()
comment11.params=p_importe
comment11.target=void\ depositar(double)
comment11.text=\r\n\ Este\ metodo\ deposita\ saldo\ a\ la\ cuenta\ (sumando\ al\ que\ ya\ se\ encontraba)\r\n\ @param\ p_importe\ importe\ a\ depositar\r\n\ @return\ saldo\ actualizado\ de\ la\ cuenta\r\n
comment12.params=p_importe
comment12.target=void\ extraccion(double)
comment12.text=\r\n\ Este\ metodo\ extrae\ saldo\ de\ la\ cuenta\r\n\ @param\ p_importe\ importe\ a\ ser\ extra\u00EDdo\r\n\ @return\ saldo\ actualizado\ de\ la\ cuenta\r\n
comment13.params=p_importe
comment13.target=boolean\ puedeExtraer(double)
comment13.text=\r\n\ Este\ metodo\ indica\ si\ es\ posible\ extraer\ o\ n\u00F3\ dinero\ de\ la\ cuenta,\ analizando\ si\ el\ importe\ a\ extraer\ no\ supera\ la\ suma\ entre\r\n\ el\ saldo\ actual\ y\ el\ limite\r\n\ @param\ p_importe\ importe\ a\ extraer\r\n\ @return\ devuelve\ true\ si\ se\ puede\ extraer\ el\ monto\ solicitado\ y\ false,\ si\ n\u00F3.\r\n
comment14.params=p_importe
comment14.target=void\ extraer(double)
comment14.text=\r\n\ Este\ metodo\ coordina\ la\ extraccion.\ Si\ el\ metodo\ puedeExtraer()\ devuelve\ true,\ entonces\ se\ procede\ con\ la\ extraccion.\ Sino,\ se\ muestra\ un\ mensaje\r\n\ @param\ p_importe\ importe\ a\ extraer\r\n
comment15.params=
comment15.target=void\ mostrar()
comment15.text=\r\n\ Este\ metodo\ muestra\ por\ pantalla\ los\ datos\ de\ la\ cuenta\ corriente\:\ el\ numero,\ saldo,\ titular\ y\ limite\r\n
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CuentaCorriente(int,\ Persona,\ double)
comment2.text=\r\n\ Este\ constructor\ sobre\ cargado\ permite\ instanciar\ un\ objeto\ de\ la\ clase\ CuentaCorriente\ con\ un\ saldo\ determinado\r\n\ @param\ p_nroCuenta\ numero\ de\ cuenta\r\n\ @param\ p_titular\ titular\ de\ la\ cuenta\r\n\ @param\ p_saldo\ el\ saldo\ de\ la\ cuenta\r\n
comment3.params=p_nroCuenta
comment3.target=void\ setNroCuenta(int)
comment4.params=p_saldo
comment4.target=void\ setSaldo(double)
comment5.params=p_persona
comment5.target=void\ setTitular(Persona)
comment6.params=p_limite
comment6.target=void\ setLimiteDescubierto(double)
comment7.params=
comment7.target=int\ getNroCuenta()
comment8.params=
comment8.target=double\ getSaldo()
comment9.params=
comment9.target=Persona\ getTitular()
numComments=16
