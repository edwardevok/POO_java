#BlueJ class context
comment0.target=Empleado
comment1.params=p_cuil\ p_apellido\ p_nombre\ p_importe\ p_anio
comment1.target=Empleado(long,\ java.lang.String,\ java.lang.String,\ double,\ int)
comment1.text=\r\n\ Constructor\ para\ instanciar\ un\ objeto\ de\ la\ clase\ Empleado\r\n\ @param\ p_cuil\ el\ cuil\ del\ Empleado\r\n\ @param\ p_apellido\ el\ apellido\ del\ Empleado\r\n\ @param\ p_nombre\ el\ nombre\ del\ Empleado\r\n\ @param\ p_importe\ el\ sueldo\ del\ Empleado\r\n\ @param\ p_anio\ el\ anio\ de\ ingreso\ a\ la\ compania\ del\ Empleado\r\n
comment10.params=
comment10.target=double\ getImporte()
comment11.params=
comment11.target=int\ getAnio()
comment12.params=
comment12.target=int\ antiguedad()
comment12.text=\r\n\ Este\ metodo\ calcula\ cuanto\ tiempo\ lleva\ trabajando\ el\ empleado\ en\ la\ compa\u00F1ia\ restando\ el\ anio\ actual\ con\ el\ anio\ de\ ingreso\ del\ mismo\r\n\ @return\ tiempo\ en\ anios\ de\ cuanto\ lleva\ trabajando\ el\ empleando\r\n
comment13.params=
comment13.target=double\ descuento()
comment13.text=\r\n\ Este\ metodo\ calcula\ el\ descuento\ de\ la\ obra\ social(2%\ de\ su\ sueldo)\ y\ seguro\ de\ vida(1500)\ que\ se\ le\ hace\ al\ sueldo\ basico\ del\ empleado\r\n\ @return\ descuento\ total\ que\ incluye\ la\ obra\ social\ y\ el\ seguro\ de\ vida\r\n
comment14.params=
comment14.target=double\ adicional()
comment14.text=\r\n\ Este\ metodo\ calcula\ el\ monto\ adicional\ que\ se\ suma\ al\ sueldo\ basico\ del\ empleado\ segun\ su\ antiguedad\r\n\ @return\ si\ la\ antiguedad\ es\ menor\ a\ 2,\ se\ devuelve\ el\ 2%\ del\ sueldo\ del\ empleado\r\n\ @return\ si\ la\ antiguedad\ es\ menor\ o\ igual\ a\ 2\ y\ menor\ a\ 10,\ se\ devuelve\ el\ 4%\ del\ sueldo\ del\ empleado\r\n\ @return\ si\ la\ antiguedad\ es\ mayor\ o\ igual\ a\ 10,\ se\ devuelve\ el\ 6%\ del\ sueldo\ del\ empleado\r\n
comment15.params=
comment15.target=double\ sueldoNeto()
comment15.text=\r\n\ Este\ metodo\ calcula\ el\ monto\ adicional\ que\ se\ suma\ al\ sueldo\ basico\ del\ empleado\ segun\ su\ antiguedad\r\n\ @return\ si\ la\ antiguedad\ es\ menor\ a\ 2,\ se\ devuelve\ el\ 2%\ del\ sueldo\ del\ empleado\r\n\ @return\ si\ la\ antiguedad\ es\ menor\ o\ igual\ a\ 2\ y\ menor\ a\ 10,\ se\ devuelve\ el\ 4%\ del\ sueldo\ del\ empleado\r\n\ @return\ si\ la\ antiguedad\ es\ mayor\ o\ igual\ a\ 10,\ se\ devuelve\ el\ 6%\ del\ sueldo\ del\ empleado\r\n
comment16.params=
comment16.target=java.lang.String\ nomYApe()
comment16.text=\r\n\ Devuelve\ el\ nombre\ y\ apellido\ del\ empleado\r\n\ @return\:\ nombre\ y\ apellido\ (en\ ese\ orden)\r\n
comment17.params=
comment17.target=java.lang.String\ apeYNom()
comment17.text=\r\n\ Devuelve\ el\ nombre\ y\ apellido\ del\ empleado\r\n\ @return\:\ apellido\ y\ nombre\ (en\ ese\ orden)\r\n
comment18.params=
comment18.target=void\ mostrar()
comment18.text=\r\n\ Este\ metodo\ muestra\ por\ pantalla\ los\ datos\ del\ empleado\:\ su\ nombre\ y\ apellido,\ cuil,\ antiguedad\ y\ su\ sueldo\ neto\r\n
comment19.params=
comment19.target=java.lang.String\ mostrarLinea()
comment19.text=\r\n\ Este\ metodo\ muestra\ por\ pantalla\ y\ en\ un\ solo\ renglon\ el\ cuil,\ apellido\ y\ nombre\ y\ el\ sueldo\ del\ empleado\r\n\ @return\:\ cuil,\ apellido\ y\ nombre\ y\ sueldo\ neto\r\n
comment2.params=p_cuil
comment2.target=void\ setCuil(long)
comment3.params=p_apellido
comment3.target=void\ setApellido(java.lang.String)
comment4.params=p_nombre
comment4.target=void\ setNombre(java.lang.String)
comment5.params=p_importe
comment5.target=void\ setImporte(double)
comment6.params=p_anio
comment6.target=void\ setAnio(int)
comment7.params=
comment7.target=long\ getCUIL()
comment8.params=
comment8.target=java.lang.String\ getApellido()
comment9.params=
comment9.target=java.lang.String\ getNombre()
numComments=20
